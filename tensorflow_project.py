# -*- coding: utf-8 -*-
"""Tensorflow Project.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1qmkVzKuYg6xsbuZRBKaebY0mK54SzUIK

#Preprocessing
"""

import pandas as pd
import os
from glob import glob
from IPython.display import Audio
from scipy.io import wavfile
import matplotlib.pyplot as plt
import librosa
import librosa.display
import numpy as np
from pathlib import Path

df = pd.read_csv('Personal/Participant_1/P1_Improvisation_Personal.csv')
df_arr = df.to_numpy()
df_onsets = df_arr[:,0]
df_vals = df_arr[:,1]

print(df_onsets)
print(df_vals)

# Load the file on an object
data = wavfile.read('Personal/Participant_1/P1_Improvisation_Personal.wav')

# Separete the object elements
framerate = data[0]
sounddata = data[1]

Audio(sounddata, rate=framerate)
plt.plot(sounddata)
plt.savefig('plots/wavegram')
plt.clf()

# Load an audio file
y, sr = librosa.load('Personal/Participant_1/P1_Improvisation_Personal.wav')

# Create a spectrogram
spectrogram = librosa.feature.melspectrogram(y=y, sr=sr)

# Visualize the spectrogram
librosa.display.specshow(librosa.power_to_db(spectrogram, ref=np.max), y_axis='mel', x_axis='time')
plt.colorbar(format='%+2.0f dB')
plt.title('Mel Spectrogram')
plt.tight_layout()
plt.savefig('plots/mel_spectrogram')
plt.clf()


time_indexes = []
times = librosa.times_like(spectrogram)
for i in df_onsets:
  time_indexes.append(np.abs(times - i).argmin())
print(time_indexes)

grey_dict = {
    "hhc": 0.2,
    "hho": 0.3,
    "kd": 0.4,
    "sd": 0.5
}

color_dict = {
    "hhc": 'b',
    "hho": 'g',
    "kd": 'c',
    "sd": 'w'
}

target = np.zeros_like(spectrogram)
for i, val in enumerate(time_indexes):
    target[:,val] = grey_dict[df_vals[i]]



librosa.display.specshow(target)
plt.savefig('plots/colored_specshow')
plt.clf()
print(df_vals)


fig, ax = plt.subplots()
# Visualize the spectrogram
librosa.display.specshow(librosa.power_to_db(spectrogram, ref=np.max))
#plt.vlines(time_indexes, 0, 128)
for ind, val in enumerate(time_indexes):
    ax.axvline(x=val, color=color_dict[df_vals[ind]])

plt.title('Marked Mel Spectrogram')
#plt.tight_layout()
plt.show()
